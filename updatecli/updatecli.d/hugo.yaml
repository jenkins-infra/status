---
title: "Bump Hugo version"
sources:
  # Get Hugo Version from Github Releases
  getLatestHugoVersion:
    kind: githubRelease
    name: Get the latest hugo version
    spec:
      owner: "gohugoio"
      repository: "hugo"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionFilter:
        kind: latest
    transformers:
      - trimPrefix: "v"
conditions:
  checkIfDockerImageIsPublished:
    transformers:
      - addSuffix: "-asciidoctor"
    name: "Test if the docker image 'klakegg/hugo' is available on the Dockerhub registry"
    kind: dockerImage
    spec:
      image: "klakegg/hugo"
targets:
  updateDockerComposeFile:
    transformers:
      - addSuffix: "-ext-asciidoctor"
      - addPrefix: "klakegg/hugo:"
    name: "Update Hugo version in docker image name in docker-compose.yaml"
    kind: yaml
    spec:
      file: docker-compose.yaml
      key: services.status.image
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  updateNetlifyConfig:
    kind: file
    name: "Update Hugo version in the Netlify configuration file"
    spec:
      file: netlify.toml
      matchPattern: 'HUGO_VERSION = .*'
      content: 'HUGO_VERSION = "{{ source `getLatestHugoVersion` }}"'
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  updateGitHubWorkflow:
    kind: yaml
    name: "Update Hugo version in the Netlify configuration file"
    spec:
      file: .github/workflows/hugo.yaml
      key: jobs.build.steps[1].with.version
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
